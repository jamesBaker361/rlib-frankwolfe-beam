#pragma once
#include <any>
#include <map>


//#define GET_1(p_1) dict[#p_1]=py::cast(p_1);
//#define SET_1(p_1,t_1) p_1=dict[#p_1].cast<t_1>();

#define GET_1(p_1) dict[#p_1]=py::cast(p_1);
#define SET_1(p_1,t_1 ) p_1=dict[#p_1].cast<t_1>();
#define GET_2(p_1,p_2) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2);
#define SET_2(p_1,t_1,p_2,t_2 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>();
#define GET_3(p_1,p_2,p_3) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3);
#define SET_3(p_1,t_1,p_2,t_2,p_3,t_3 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>();
#define GET_4(p_1,p_2,p_3,p_4) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4);
#define SET_4(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>();
#define GET_5(p_1,p_2,p_3,p_4,p_5) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5);
#define SET_5(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>();
#define GET_6(p_1,p_2,p_3,p_4,p_5,p_6) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6);
#define SET_6(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>();
#define GET_7(p_1,p_2,p_3,p_4,p_5,p_6,p_7) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7);
#define SET_7(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>();
#define GET_8(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8);
#define SET_8(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>();
#define GET_9(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9);
#define SET_9(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>();
#define GET_10(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10);
#define SET_10(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>();
#define GET_11(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11);
#define SET_11(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>();
#define GET_12(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12);
#define SET_12(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>();
#define GET_13(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13);
#define SET_13(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>();
#define GET_14(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14);
#define SET_14(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>();
#define GET_15(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14,p_15) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14); dict[#p_15]=py::cast(p_15);
#define SET_15(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14,p_15,t_15 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>(); p_15=dict[#p_15].cast<t_15>();
#define GET_16(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14,p_15,p_16) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14); dict[#p_15]=py::cast(p_15); dict[#p_16]=py::cast(p_16);
#define SET_16(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14,p_15,t_15,p_16,t_16 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>(); p_15=dict[#p_15].cast<t_15>(); p_16=dict[#p_16].cast<t_16>();
#define GET_17(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14,p_15,p_16,p_17) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14); dict[#p_15]=py::cast(p_15); dict[#p_16]=py::cast(p_16); dict[#p_17]=py::cast(p_17);
#define SET_17(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14,p_15,t_15,p_16,t_16,p_17,t_17 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>(); p_15=dict[#p_15].cast<t_15>(); p_16=dict[#p_16].cast<t_16>(); p_17=dict[#p_17].cast<t_17>();
#define GET_18(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14,p_15,p_16,p_17,p_18) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14); dict[#p_15]=py::cast(p_15); dict[#p_16]=py::cast(p_16); dict[#p_17]=py::cast(p_17); dict[#p_18]=py::cast(p_18);
#define SET_18(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14,p_15,t_15,p_16,t_16,p_17,t_17,p_18,t_18 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>(); p_15=dict[#p_15].cast<t_15>(); p_16=dict[#p_16].cast<t_16>(); p_17=dict[#p_17].cast<t_17>(); p_18=dict[#p_18].cast<t_18>();
#define GET_19(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14,p_15,p_16,p_17,p_18,p_19) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14); dict[#p_15]=py::cast(p_15); dict[#p_16]=py::cast(p_16); dict[#p_17]=py::cast(p_17); dict[#p_18]=py::cast(p_18); dict[#p_19]=py::cast(p_19);
#define SET_19(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14,p_15,t_15,p_16,t_16,p_17,t_17,p_18,t_18,p_19,t_19 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>(); p_15=dict[#p_15].cast<t_15>(); p_16=dict[#p_16].cast<t_16>(); p_17=dict[#p_17].cast<t_17>(); p_18=dict[#p_18].cast<t_18>(); p_19=dict[#p_19].cast<t_19>();
#define GET_20(p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8,p_9,p_10,p_11,p_12,p_13,p_14,p_15,p_16,p_17,p_18,p_19,p_20) dict[#p_1]=py::cast(p_1); dict[#p_2]=py::cast(p_2); dict[#p_3]=py::cast(p_3); dict[#p_4]=py::cast(p_4); dict[#p_5]=py::cast(p_5); dict[#p_6]=py::cast(p_6); dict[#p_7]=py::cast(p_7); dict[#p_8]=py::cast(p_8); dict[#p_9]=py::cast(p_9); dict[#p_10]=py::cast(p_10); dict[#p_11]=py::cast(p_11); dict[#p_12]=py::cast(p_12); dict[#p_13]=py::cast(p_13); dict[#p_14]=py::cast(p_14); dict[#p_15]=py::cast(p_15); dict[#p_16]=py::cast(p_16); dict[#p_17]=py::cast(p_17); dict[#p_18]=py::cast(p_18); dict[#p_19]=py::cast(p_19); dict[#p_20]=py::cast(p_20);
#define SET_20(p_1,t_1,p_2,t_2,p_3,t_3,p_4,t_4,p_5,t_5,p_6,t_6,p_7,t_7,p_8,t_8,p_9,t_9,p_10,t_10,p_11,t_11,p_12,t_12,p_13,t_13,p_14,t_14,p_15,t_15,p_16,t_16,p_17,t_17,p_18,t_18,p_19,t_19,p_20,t_20 ) p_1=dict[#p_1].cast<t_1>(); p_2=dict[#p_2].cast<t_2>(); p_3=dict[#p_3].cast<t_3>(); p_4=dict[#p_4].cast<t_4>(); p_5=dict[#p_5].cast<t_5>(); p_6=dict[#p_6].cast<t_6>(); p_7=dict[#p_7].cast<t_7>(); p_8=dict[#p_8].cast<t_8>(); p_9=dict[#p_9].cast<t_9>(); p_10=dict[#p_10].cast<t_10>(); p_11=dict[#p_11].cast<t_11>(); p_12=dict[#p_12].cast<t_12>(); p_13=dict[#p_13].cast<t_13>(); p_14=dict[#p_14].cast<t_14>(); p_15=dict[#p_15].cast<t_15>(); p_16=dict[#p_16].cast<t_16>(); p_17=dict[#p_17].cast<t_17>(); p_18=dict[#p_18].cast<t_18>(); p_19=dict[#p_19].cast<t_19>(); p_20=dict[#p_20].cast<t_20>();

#define OVERLOADED_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,NAME,...) NAME
#define OVERLOADED_MACRO_CAST(_1,_t1,_2,_t2,_3,_t3,_4,_t4,_5,_t5,_6,_t6,_7,_t7,_8,_t8,_9,_t9,_10,_t10,_11,_t11,_12,_t12,_13,_t13,_14,_t14,_15,_t15,_16,_t16,_17,_t17,_18,_t18,_19,_t19,_20,_t20,NAME,...) NAME
#define GET_STATE(...) OVERLOADED_MACRO(__VA_ARGS__, GET_20,GET_19,GET_18,GET_17,GET_16,GET_15,GET_14,GET_13,GET_12,GET_11,GET_10,GET_9,GET_8,GET_7,GET_6,GET_5,GET_4,GET_3,GET_2,GET_1) (__VA_ARGS__)
#define SET_STATE(...) OVERLOADED_MACRO_CAST(__VA_ARGS__, SET_20,_20,SET_19,_19,SET_18,_18,SET_17,_17,SET_16,_16,SET_15,_15,SET_14,_14,SET_13,_13,SET_12,_12,SET_11,_11,SET_10,_10,SET_9,_9,SET_8,_8,SET_7,_7,SET_6,_6,SET_5,_5,SET_4,_4,SET_3,_3,SET_2,_2,SET_1,_1) (__VA_ARGS__)

#define GET_FUNCTION(...) std::map<std::string, py::object> getState() const { std::map<std::string, py::object> dict; GET_STATE(__VA_ARGS__) return dict;}
#define SET_FUNCTION(...) void setState(std::map<std::string,py::object> dict){ SET_STATE(__VA_ARGS__) }

#define D_COPY(property) property=other.property;

class Pickleable {
    //virtual void setState(const std::map<std::string, std::any> dict)=0;
    //virtual std::map<std::string, std::any> getState() const=0;
};